import type { NextPage } from "next";
import { FormEvent, useState, useCallback } from "react";
import Head from "next/head";
import {
    CardContent,
    CardMedia,
    Card,
    CardActionArea,
    Typography,
    TextField,
    Button,
    Grid,
    Container,
    MenuItem,
} from "@mui/material";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import axios from "axios";
import Image from "next/image";
import styles from "../styles/Home.module.css";

export interface ReturnDataProps {
    firstname: string;
    middlename: string;
    lastname: string;
    roll: string;
    batch: string;
    prog: string;
}

const Home: NextPage = () => {
    const [loading, setLoading] = useState(false);
    const [prog, setProg] = useState("");
    const [batch, setBatch] = useState("");
    const [group, setGroup] = useState("");
    const [datas, setDatas] = useState<Array<ReturnDataProps>>([]);
    const [dataPresent, setDataPresent] = useState(true);
    const programs = [
        {
            value: "BCT",
            label: "BCT",
        },
        {
            value: "BEI",
            label: "BEI",
        },
        {
            value: "BEX",
            label: "BEX",
        },
        {
            value: "BEL",
            label: "BEL",
        },
        {
            value: "BME",
            label: "BME",
        },
        {
            value: "BAR",
            label: "BAR",
        },
        {
            value: "BAE",
            label: "BAE",
        },
        {
            value: "BAS",
            label: "BAS",
        },
        {
            value: "BCE",
            label: "BCE",
        },
        {
            value: "BCH",
            label: "BCH",
        },
    ];
    const years = [
        { value: "074", label: "074" },
        { value: "075", label: "075" },
        { value: "076", label: "076" },
        { value: "077", label: "077" },
    ];
    const groups = [
        { value: "A", label: "A" },
        { value: "B", label: "B" },
        { value: "C", label: "C" },
        { value: "D", label: "D" },
        { value: "E", label: "E" },
        { value: "F", label: "F" },
        { value: "G", label: "G" },
        { value: "H", label: "h" },
    ];

    const theme = createTheme({
        components: {
            // Name of the component ⚛️
            MuiCard: {
                styleOverrides: {
                    root: {
                        transition: "all 0.2s",
                        boxShadow: "none",
                        border: "1px solid rgb(80, 86, 93)",
                        // The default props to change
                        "&:hover": {
                            transform: "scale(1.03, 1.03)",
                        },
                    },
                },
            },
        },
    });
    const mapMenuItems = (options: { label: string; value: string }[]) => {
        return options.map(option => (
            <MenuItem key={option.value} value={option.value}>
                {option.value}
            </MenuItem>
        ));
    };

    const formSubmitHandler = useCallback(
        async (e: FormEvent<HTMLFormElement>) => {
            e.preventDefault();
            try {
                setLoading(true);
                const response = await axios.post(
                    "http://localhost:5500/student/",
                    {
                        prog,
                        batch,
                        group,
                    }
                );
                setDatas(response.data);
                if (!response.data.length) {
                    setDataPresent(false);
                } else {
                    setDataPresent(true);
                }
            } catch (error) {
                console.log(error);
            } finally {
                setLoading(false);
            }
        },
        [prog, batch, group, setDatas]
    );

    return (
        <Container maxWidth="lg">
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <Grid
                    container
                    component="form"
                    direction={{ xs: "column", sm: "row" }}
                    spacing={{ xs: 1, sm: 2, md: 4 }}
                    onSubmit={formSubmitHandler}
                >
                    <Grid item xs={12} sm={6} md={4} lg={4}>
                        <TextField
                            id="prog"
                            select
                            name="prog"
                            label="Program"
                            value={prog}
                            fullWidth
                            onChange={event => setProg(event.target.value)}
                        >
                            {mapMenuItems(programs)}
                        </TextField>
                    </Grid>
                    <Grid item xs={12} sm={6} md={4} lg={3}>
                        <TextField
                            id="batch"
                            name="batch"
                            select
                            label="Batch"
                            value={batch}
                            fullWidth
                            onChange={event => setBatch(event.target.value)}
                        >
                            {mapMenuItems(years)}
                        </TextField>
                    </Grid>

                    <Grid item xs={12} sm={6} md={4} lg={3}>
                        <TextField
                            id="group"
                            select
                            name="group"
                            label="Group"
                            value={group}
                            fullWidth
                            onChange={event => setGroup(event.target.value)}
                        >
                            {mapMenuItems(groups)}
                        </TextField>
                    </Grid>

                    <Grid item xs={12} sm={12} md={4} lg={2}>
                        <Button type="submit" variant="contained" fullWidth>
                            Submit
                        </Button>
                    </Grid>
                </Grid>
            </main>

            {loading && (
                <Image
                    src="/searching.gif"
                    style={{ margin: "0 auto" }}
                    height={600}
                    width={800}
                    alt="Loading"
                />
            )}
            {!dataPresent && (
                <Image
                    src="/search-not-found.gif"
                    style={{ margin: "0 auto" }}
                    height={386}
                    width={718}
                    alt="Not found"
                />
            )}
            {!loading && Boolean(datas.length) && (
                <Grid
                    container
                    rowSpacing={4}
                    columnSpacing={3}
                    className={styles.scroll}
                    height="88vh"
                    paddingRight={1}
                    paddingBottom={4}
                    marginTop={4}
                >
                    {datas.map(data => {
                        return (
                            <Grid
                                item
                                xs={12}
                                sm={6}
                                md={4}
                                lg={3}
                                key={data.roll}
                            >
                                <ThemeProvider theme={theme}>
                                    <Card sx={{ width: 260 }}>
                                        <CardActionArea>
                                            <CardMedia
                                                component="img"
                                                height="140"
                                                image="/ioe.jpg"
                                                alt="Pulchowk Campus"
                                                style={{ opacity: "0.7" }}
                                            />
                                            <CardContent>
                                                <Typography
                                                    gutterBottom
                                                    component="div"
                                                >
                                                    {`${data.firstname} ${data.middlename} ${data.lastname}`}
                                                </Typography>
                                                <Typography
                                                    variant="body2"
                                                    color="text.secondary"
                                                >
                                                    Roll:{" "}
                                                    {data.batch +
                                                        data.prog +
                                                        data.roll}
                                                </Typography>
                                            </CardContent>
                                        </CardActionArea>
                                    </Card>
                                </ThemeProvider>
                            </Grid>
                        );
                    })}
                </Grid>
            )}
        </Container>
    );
};

export default Home;
